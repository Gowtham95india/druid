import { ExpressionJS, ExpressionValue, Expression, ChainableExpression } from './baseExpression';
import { SQLDialect } from '../dialect/baseDialect';
import { PlywoodValue } from '../datatypes/index';
export declare class LimitExpression extends ChainableExpression {
    static op: string;
    static fromJS(parameters: ExpressionJS): LimitExpression;
    value: int;
    constructor(parameters?: ExpressionValue);
    valueOf(): ExpressionValue;
    toJS(): ExpressionJS;
    equals(other: LimitExpression): boolean;
    protected _toStringParameters(indent?: int): string[];
    protected _calcChainableHelper(operandValue: any): PlywoodValue;
    protected _getSQLChainableHelper(dialect: SQLDialect, operandSQL: string): string;
    protected specialSimplify(): Expression;
}
